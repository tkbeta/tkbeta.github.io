https://github.com/uudashr/gopkgs/issues/25

Default
[148912 ms] go get golang.org/x/tools/gopls@latest: module golang.org/x/tools/gopls: Get https://proxy.golang.org/golang.org/x/tools/gopls/@v/list: dial tcp 172.217.24.17:443: i/o timeout

export GOPROXY=https://goproxy.io
[73409 ms] go get: github.com/mgechev/revive@v1.0.1 requires
        github.com/blang/semver@v3.6.1+incompatible: reading https://goproxy.io/github.com/blang/semver/@v/v3.6.1+incompatible.mod: 410 Gone


export GOPROXY=https://goproxy.cn
[47515 ms] go get: github.com/uudashr/gopkgs/cmd/gopkgs@v0.0.0-20191024034442-58e9141cd7d6 requires
        github.com/uudashr/gopkgs/v2@v2.1.0 requires
        github.com/uudashr/gopkgs@v0.0.0: reading https://goproxy.cn/github.com/uudashr/gopkgs/@v/v0.0.0.mod: 404 Not Found

加上,direct就会从github上去抓：
之所以在后面拼接一个 ,direct，是因为通过这样做我们可以在一定程度上解决私有库的问题（当然， goproxy.cn 无法访问你的私有库）。这个 GOPROXY 设定的工作原理是：当 go 在抓取目标模块时>，若遇见了 404 错误，那么就回退到 direct 也就是直接去目标模块的源头（比如 GitHub） 去抓取。而恰好，GitHub 等类似的代码托管网站的原则基本都是“你无权访问的你来说就是不存在的”，所以
我才说通过这样设定可以在一定程度上解决私有库无法通过模块代理访问的问题。

export GOPROXY=https://goproxy.cn,https://goproxy.io,direct
[95319 ms] go get: github.com/uudashr/gopkgs/cmd/gopkgs@v0.0.0-20191024034442-58e9141cd7d6 requires
        github.com/uudashr/gopkgs/v2@v2.1.0 requires
        github.com/uudashr/gopkgs@v0.0.0: reading github.com/uudashr/gopkgs/go.mod at revision v0.0.0: unknown revision v0.0.0

    && export http_proxy=127.0.0.1:1087 \
    && export https_proxy=127.0.0.1:1087 \
[37569 ms] go get golang.org/x/tools/gopls@latest: module golang.org/x/tools/gopls: Get https://proxy.golang.org/golang.org/x/tools/gopls/@v/list: proxyconnect tcp: dial tcp 127.0.0.1:1087: connect: connection refused


    && export http_proxy=host.docker.internal:1087 \
    && export https_proxy=host.docker.internal:1087 \
[103953 ms] go get: github.com/uudashr/gopkgs/cmd/gopkgs@v0.0.0-20191024034442-58e9141cd7d6 requires
        github.com/uudashr/gopkgs/v2@v2.1.0 requires
        github.com/uudashr/gopkgs@v0.0.0: reading github.com/uudashr/gopkgs/go.mod at revision v0.0.0: unknown revision v0.0.0

go get: github.com/uudashr/gopkgs/cmd/gopkgs@v2
export GOPROXY=https://goproxy.cn,https://goproxy.io,direct
[117002 ms] github.com/alecthomas/gometalinter (download)
[469756 ms] # cd .; git clone -- https://github.com/alecthomas/gometalinter /go/src/github.com/alecthomas/gometalinter
Cloning into '/go/src/github.com/alecthomas/gometalinter'...
error: RPC failed; curl 18 transfer closed with outstanding read data remaining
fatal: the remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
package github.com/alecthomas/gometalinter: exit status 128

